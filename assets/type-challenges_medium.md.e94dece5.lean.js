import{_ as p,c as e,b as s,d as n,e as l,a as o,o as t,r as c}from"./app.ee0fa6b9.js";const W=JSON.parse('{"title":"Medium","description":"","frontmatter":{},"headers":[{"level":2,"title":"Omit","slug":"omit","link":"#omit","children":[]},{"level":2,"title":"Readonly 2","slug":"readonly-2","link":"#readonly-2","children":[]},{"level":2,"title":"Deep Readonly","slug":"deep-readonly","link":"#deep-readonly","children":[]},{"level":2,"title":"Tuple to Union","slug":"tuple-to-union","link":"#tuple-to-union","children":[]},{"level":2,"title":"Tuple to Nested Object","slug":"tuple-to-nested-object","link":"#tuple-to-nested-object","children":[]}],"relativePath":"type-challenges/medium.md"}'),r={name:"type-challenges/medium.md"},y=o("",2),C={id:"omit",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#omit","aria-hidden":"true"},"#",-1),F=o("",6),A={class:"tip custom-block"},i=s("p",{class:"custom-block-title"},"相关题目",-1),d=s("a",{href:"/type-challenges/easy.html#pick"},"Pick",-1),u=o("",7),B={class:"tip custom-block"},h=s("p",{class:"custom-block-title"},"相关题目",-1),_=s("a",{href:"/type-challenges/easy.html#readonly"},"Readonly",-1),m=s("a",{href:"/type-challenges/medium.html#deep-readonly"},"Deep Readonly",-1),g=o("",9),T={class:"tip custom-block"},b=s("p",{class:"custom-block-title"},"相关题目",-1),f=s("a",{href:"/type-challenges/easy.html#readonly"},"Readonly",-1),E=s("a",{href:"/type-challenges/medium.html#readonly-2"},"Readonly 2",-1),k=o("",7),v={class:"tip custom-block"},S=s("p",{class:"custom-block-title"},"相关题目",-1),x=s("a",{href:"/type-challenges/easy.html#tuple-to-object"},"Tuple to Object",-1),j=s("a",{href:"/type-challenges/hard.html#tuple-to-enum-object"},"Tuple to Enum Object",-1),P=s("a",{href:"/type-challenges/hard.html#union-to-tuple"},"Union to Tuple",-1),R=s("a",{href:"/type-challenges/medium.html#tuple-to-nested-object"},"Tuple to Nested Object",-1),N=o("",7),O={class:"tip custom-block"},q=s("p",{class:"custom-block-title"},"相关题目",-1),U=s("a",{href:"/type-challenges/medium.html#tuple-to-union"},"Tuple to Union",-1),V=s("a",{href:"/type-challenges/easy.html#tuple-to-object"},"Tuple to Object",-1),I=s("a",{href:"/type-challenges/hard.html#tuple-to-enum-object"},"Tuple to Enum Object",-1),K=s("a",{href:"/type-challenges/hard.html#union-to-tuple"},"Union to Tuple",-1);function w(M,$,H,X,Y,G){const a=c("Badge");return t(),e("div",null,[y,s("h2",C,[n("Omit "),l(a,{type:"info",text:"built-in"}),n(),D]),F,s("div",A,[i,s("p",null,[d,n(),l(a,{type:"tip",text:"easy"})])]),u,s("div",B,[h,s("p",null,[_,n(),l(a,{type:"tip",text:"easy"})]),s("p",null,[m,n(),l(a,{type:"warning",text:"medium"})])]),g,s("div",T,[b,s("p",null,[f,n(),l(a,{type:"tip",text:"easy"})]),s("p",null,[E,n(),l(a,{type:"warning",text:"medium"})])]),k,s("div",v,[S,s("p",null,[x,n(),l(a,{type:"tip",text:"easy"})]),s("p",null,[j,n(),l(a,{type:"danger",text:"hard"})]),s("p",null,[P,n(),l(a,{type:"danger",text:"hard"})]),s("p",null,[R,n(),l(a,{type:"warning",text:"medium"})])]),N,s("div",O,[q,s("p",null,[U,n(),l(a,{type:"warning",text:"medium"})]),s("p",null,[V,n(),l(a,{type:"tip",text:"easy"})]),s("p",null,[I,n(),l(a,{type:"danger",text:"hard"})]),s("p",null,[K,n(),l(a,{type:"danger",text:"hard"})])])])}const z=p(r,[["render",w]]);export{W as __pageData,z as default};
