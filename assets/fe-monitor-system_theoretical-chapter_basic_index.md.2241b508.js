import{_ as l,c as i,o as e,a}from"./app.9596a0fa.js";const t="/assets/前端监控的重要指标.397e9da2.jpg",f=JSON.parse('{"title":"基础知识","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 为什么要有前端监控？","slug":"_1-为什么要有前端监控","link":"#_1-为什么要有前端监控","children":[]},{"level":2,"title":"2. 前端监控能带来什么好处？","slug":"_2-前端监控能带来什么好处","link":"#_2-前端监控能带来什么好处","children":[]},{"level":2,"title":"3. 前端监控的流程","slug":"_3-前端监控的流程","link":"#_3-前端监控的流程","children":[{"level":3,"title":"3.1. 数据采集","slug":"_3-1-数据采集","link":"#_3-1-数据采集","children":[]},{"level":3,"title":"3.2. 组装上报","slug":"_3-2-组装上报","link":"#_3-2-组装上报","children":[]},{"level":3,"title":"3.3. 清洗存储","slug":"_3-3-清洗存储","link":"#_3-3-清洗存储","children":[]},{"level":3,"title":"3.4. 数据消费","slug":"_3-4-数据消费","link":"#_3-4-数据消费","children":[]}]},{"level":2,"title":"4. 前端监控的关注点","slug":"_4-前端监控的关注点","link":"#_4-前端监控的关注点","children":[]}],"relativePath":"fe-monitor-system/theoretical-chapter/basic/index.md","lastUpdated":1675151262000}'),r={name:"fe-monitor-system/theoretical-chapter/basic/index.md"},d=a('<h1 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-hidden="true">#</a></h1><h2 id="_1-为什么要有前端监控" tabindex="-1">1. 为什么要有前端监控？ <a class="header-anchor" href="#_1-为什么要有前端监控" aria-hidden="true">#</a></h2><ul><li>用户体验直接决定用户留存，然而众多 <strong>体验问题</strong> 单靠用户反馈并不现实 <ul><li>页面加载慢</li><li>页面白屏</li><li>操作卡顿或无响应</li><li>请求响应慢</li><li>一直在请求中</li><li>请求频繁报错</li><li>排版样式错乱</li><li>...</li></ul></li><li>移动互联网时代，用户要求越来越高，耐心越来越少，对页面响应慢、页面不可用的容忍度低</li><li>使用场景复杂，H5、App、Web、浏览器版本兼容、手机型号、用户网速等等，都可能给业务带来影响</li></ul><h2 id="_2-前端监控能带来什么好处" tabindex="-1">2. 前端监控能带来什么好处？ <a class="header-anchor" href="#_2-前端监控能带来什么好处" aria-hidden="true">#</a></h2><ul><li>提升稳定性，更快地发现异常、定位异常、解决异常 <ul><li>JavaScript 运行时错误</li><li>网络接口请求异常</li><li>资源加载异常</li><li>白屏</li><li>...</li></ul></li><li>提升用户体验，建立性能规范，长期关注优化 <ul><li>页面性能</li><li>接口性能</li><li>资源加载性能</li><li>卡顿监控</li></ul></li><li>了解业务数据，指导产品升级 <ul><li>PV &amp;&amp; UV</li><li>业务数据</li><li>行为监控</li></ul></li></ul><h2 id="_3-前端监控的流程" tabindex="-1">3. 前端监控的流程 <a class="header-anchor" href="#_3-前端监控的流程" aria-hidden="true">#</a></h2><p>主要分为四步：</p><ol><li>数据采集</li><li>组装上报</li><li>清洗存储</li><li>数据消费</li></ol><h3 id="_3-1-数据采集" tabindex="-1">3.1. 数据采集 <a class="header-anchor" href="#_3-1-数据采集" aria-hidden="true">#</a></h3><ul><li>PV 监控：记录页面切换后新的 url、页面切换原因</li><li>JavaScript 错误：错误对应的类型、描述、行列号、堆栈，错误发生前的用户交互、错误的上下文等等</li><li>性能监控：首屏加载各阶段耗时、各性能指标、SPA 切换耗时、LongTask 等等</li><li>请求监控：请求的路径、状态码、请求头和响应头、请求各阶段耗时等等</li><li>白屏监控：白屏发生的页面、关联的异常、相关的上下文等等</li><li>静态资源监控 &amp;&amp; 用户行为监控 &amp;&amp; 自定义监控</li></ul><h3 id="_3-2-组装上报" tabindex="-1">3.2. 组装上报 <a class="header-anchor" href="#_3-2-组装上报" aria-hidden="true">#</a></h3><ul><li>基础信息包装：页面路径、页面标识、全局 context、部署版本、部署环境、网络等等</li><li>采样逻辑</li><li>用户自定义包装逻辑执行：通过提供生命周期钩子的方法让用户扩展自定义包装逻辑，比如补充更多上下文、对数据进行脱敏等</li><li>队列暂存 &amp;&amp; 聚合发送</li><li>发送时机：使用 <code>sendBeacon</code> 进行发送，它会在页面关闭时发送请求，并且不会阻塞页面卸载</li></ul><h3 id="_3-3-清洗存储" tabindex="-1">3.3. 清洗存储 <a class="header-anchor" href="#_3-3-清洗存储" aria-hidden="true">#</a></h3><ul><li>User-Agent 解析：浏览器版本、系统版本、设备型号、品牌等</li><li>IP 解析：地区、省份、城市、运营商、地理位置等</li><li>分类型落表落库</li><li>处理 JavaScript 错误：堆栈数据格式化、<code>SourceMap</code> 还原</li></ul><h3 id="_3-4-数据消费" tabindex="-1">3.4. 数据消费 <a class="header-anchor" href="#_3-4-数据消费" aria-hidden="true">#</a></h3><ul><li>总览分析：查看站点的整体运行情况，有效呈现需要关注的问题和出现的异常情况</li><li>各功能模块消费视角：如异常模块、性能模块等</li><li>单点查询，能够针对用户全生命周期上报数据的重建展示，比如展示某个异常发生时用户的行为</li><li>提供数据订阅能力，当业务关注某块数据的时候，会在对应数据变化时主动通知业务方</li><li>提供实时报警能力：当检测到严重异常时会主动发起报警</li></ul><h2 id="_4-前端监控的关注点" tabindex="-1">4. 前端监控的关注点 <a class="header-anchor" href="#_4-前端监控的关注点" aria-hidden="true">#</a></h2><p><img src="'+t+'" alt="前端监控的重要指标" data-fancybox="gallery"></p>',18),n=[d];function h(s,c,_,o,u,p){return e(),i("div",null,n)}const x=l(r,[["render",h]]);export{f as __pageData,x as default};
